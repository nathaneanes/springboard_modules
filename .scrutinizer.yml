# .scrutinizer.yml
application:
    dependencies:
    environment:
        timezone: 'US/Eastern'
        php:
            version: 5.4.30
            ini:
                'date.timezone': 'America/New_York'
        hosts:
            local.dev: '127.0.0.1'
        apache2:
            modules: ['rewrite']
            sites:
                springboard:
                    web_root: '.'
                    host: 'local.dev'
    project_setup:
        before:
            - 'mysql -uroot -e "CREATE DATABASE springboard"'
            - 'composer global config github-oauth.github.com $GITHUB_ACCESS_TOKEN'
            - 'composer global require drush/drush:6.5.0'
            - 'cd ..'
            - 'mv build repo'
            - 'ls -lah'
            - 'git clone --branch 7.x-4.x https://github.com/JacksonRiver/Springboard-Build.git build-tools'
            - 'echo "projects[springboard][download][branch] = $SCRUTINIZER_SHA1" >> build-tools/springboard-core.make'
            - 'cat build-tools/springboard-core.make'
            - 'drush make build-tools/springboard-mtsb.make build'
            - 'cd build'
            - 'chmod -R 777 sites/default'
            - "drush si sbsetup install_configure_form.update_status_module='array(FALSE,FALSE)' --account-name=admin --account-pass=admin --account-mail=david.barbarisi@jacksonriver.com --clean-url=1 --site-mail=david.barbarisi@jacksonriver.com --site-name=4x --db-url=mysql://root:@127.0.0.1/springboard --yes"

build:
    environment:
        timezone: 'US/Eastern'
        php:
            version: 5.4.30
            ini:
                'date.timezone': 'America/New_York'
        hosts:
            local.dev: '127.0.0.1'
        apache2:
            modules: ['rewrite']
            sites:
                springboard:
                    web_root: '.'
                    host: 'local.dev'
    dependencies:
        before:
            - sudo apt-get install ack-grep
    project_setup:
        before:
            - 'find . -name "*.php" -print0 | xargs -0 -n1 -P8 php -l'
            - 'find . -name "*.module" -print0 | xargs -0 -n1 -P8 php -l'
            - 'find . -name "*.install" -print0 | xargs -0 -n1 -P8 php -l'
            - 'find . -name "*.inc" -print0 | xargs -0 -n1 -P8 php -l'
            - 'find . -name "*.profile" -print0 | xargs -0 -n1 -P8 php -l'
            - 'find . -name "*.test" -print0 | xargs -0 -n1 -P8 php -l'
            - 'find . -name "*.theme" -print0 | xargs -0 -n1 -P8 php -l'
            # Negate the return value of ack, because not finding these
            # strings should be a pass.
            - '! ack -i "<<<<<<<|^=======$|>>>>>>>|dpm\(|dsm\(|var_dump\(| var_export\(|debug\(|" --ignore-file=ext:txt,test,html'
            - 'composer global config github-oauth.github.com $GITHUB_ACCESS_TOKEN'
            - 'composer global require drush/drush:6.5.0'
            - 'cd ..'
            - 'mv build repo'
            - 'ls -lah'
            - 'git clone --branch 7.x-4.x https://github.com/JacksonRiver/Springboard-Build.git build-tools'
            - 'echo "projects[springboard][download][branch] = $SCRUTINIZER_SHA1" >> build-tools/springboard-core.make'
            - 'cat build-tools/springboard-core.make'
            - 'drush make build-tools/springboard-mtsb.make build'
            - 'cd build'
            - 'mysql -uroot -e "CREATE DATABASE springboard"'
            - 'chmod -R 777 sites/default'
            - "drush si sbsetup install_configure_form.update_status_module='array(FALSE,FALSE)' --account-name=admin --account-pass=admin --account-mail=david.barbarisi@jacksonriver.com --clean-url=1 --site-mail=david.barbarisi@jacksonriver.com --site-name=4x --db-url=mysql://root:@127.0.0.1/springboard --yes"
    tests:
        before:
        override:
            - 'drush -l http://local.dev cc all'
            - 'drush -l http://local.dev status'
            - 'curl --max-time 10 http://local.dev | grep "DONATE"'
            - 'drush -l http://local.dev en springboard_tests -y'
            - 'drush -l http://local.dev sb-test-run springboard --xml=../artifacts'

filter:
    paths:
        - '*.php'
        - '*.module'
        - '*.install'
        - '*.inc'
        - '*.profile'
        - '*.test'
        - '*.theme'
    excluded_paths:
        - 'vendor/*'
        - 'app/*'
        - 'web/*'
tools:
    js_hint:
        enabled: true
        filter:
            paths:
                - '*.js'
    php_mess_detector:
        extensions:
            - php
            - module
            - install
            - inc
            - profile
            - test
            - theme
        filter:
            excluded_paths: ['vendor/*', 'app/*', 'web/*']
        config:
            code_size_rules:
                cyclomatic_complexity:  true
                npath_complexity:     true
                excessive_method_length:  true
                excessive_class_length:  true
                excessive_parameter_list:  true
                excessive_public_count:  true
                too_many_fields:      true
                too_many_methods:     true
                excessive_class_complexity:  true
            design_rules:
                exit_expression:      true
                eval_expression:      true
                goto_statement:       true
                number_of_class_children:  true
                depth_of_inheritance:  true
                coupling_between_objects:  true
            unused_code_rules:
                unused_private_field:  true
                unused_local_variable:  true
                unused_private_method:  true
                unused_formal_parameter:  false
            naming_rules:
                short_variable:
                    minimum:              3
                long_variable:
                    maximum:              40
                short_method:
                    minimum:              3
                constructor_conflict:  true
                constant_naming:      true
                boolean_method_name:  true
            controversial_rules:
                superglobals:         false
                camel_case_class_name:  false
                camel_case_property_name:  false
                camel_case_method_name:  false
                camel_case_parameter_name:  false
                camel_case_variable_name:  false
    php_code_sniffer:
        enabled: true
        extensions:
            - php
            - module
            - install
            - inc
            - profile
            - test
            - theme
        filter:
            excluded_paths: ['vendor/*', 'app/*', 'web/*']
        config:
            tab_width: '2'
            encoding: utf8
            standard: Drupal
    php_cpd:
        names:
            - '*.php'
            - '*.module'
            - '*.install'
            - '*.inc'
            - '*.profile'
            - '*.test'
            - '*.theme'
        filter:
            excluded_paths: ['vendor/*', 'app/*', 'web/*']

    php_loc:
        names:
            - '*.php'
            - '*.module'
            - '*.install'
            - '*.inc'
            - '*.profile'
            - '*.test'
            - '*.theme'
    php_pdepend:
        suffixes:
            - php
            - module
            - install
            - inc
            - profile
            - test
            - theme
    php_sim: false
    php_changetracking: true
    php_analyzer:
        enabled: false
        config:
            metrics_coupling:
                enabled: false
            metrics_lack_of_cohesion_methods:
                enabled: false
            basic_semantic_checks:
                enabled: false
                property_on_interface: true
                missing_abstract_methods: true
        extensions:
            - php
            - module
            - install
            - inc
            - profile
            - test
            - theme

    sensiolabs_security_checker: false

    # Runs the PHP CS Fixer (http://cs.sensiolabs.org/).
    php_cs_fixer:
        extensions:
            - php
            - module
            - install
            - inc
            - profile
            - test
            - theme
        filter:
            excluded_paths: ['vendor/*', 'app/*', 'web/*']
        config:
            level:                custom # Allowed Values: "psr0", "psr1", "psr2", "all", "custom"
            fixers:
                indentation:          false
                linefeed:             true # All PHP files must use the Unix LF (linefeed) line ending.
                trailing_spaces:      true # Remove trailing whitespace at the end of lines.
                unused_use:           false
                phpdoc_params:        false
                visibility:           false
                return:               false
                short_tag:            true # PHP code must use the long <?php ?> tags or the short-echo <?= ?> tags; it must not use the other tag variations.
                braces:               false
                include:              true # Include and file path should be divided with a single space. File path should not be placed under brackets.
                php_closing_tag:      true # The closing ?> tag MUST be omitted from files containing only PHP.
                extra_empty_lines:    false
                controls_spaces:      true # A single space should be between: the closing brace and the control, the control and the opening parentheses, the closing parentheses and the opening brace.
                elseif:               true # The keyword elseif should be used instead of else if so that all control keywords looks like single words.
                eof_ending:           true # A file must always end with an empty line feed.
